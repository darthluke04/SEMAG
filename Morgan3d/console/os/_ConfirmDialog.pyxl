$ConfirmDialog
════════════════════════════════════════════════════════════════════════

const windowBackgroundColor = #135
const windowBorderColor     = #fff
const text_color            = #fff
const text_shadow_color     = #0006
const promptColor           = #4DF
const selectedColor         = #f
const unselectedColor       = #b

const OPEN_FRAMES            = 8

let title
let message
let callback
const sz = xy(0, 0)

const choice_array = ["No", "Yes"]
let choice_index

let font


enter(choice)
────────────────────────────────────────────────────────────────────────
font = $font9
if VIEW_ARRAY[0].size.y <= 64: font = $font5
else if VIEW_ARRAY[0].size.y <= 112: font = $font8

title = choice.text
message = if is_string(choice.confirm) then choice.confirm else ""
callback = choice.callback

choice_index = 0
play_sound($openUISound)

sz.x = mid(VIEW_ARRAY[0].size.x - 2, 150% * max(text_width(font, title), text_width(font, message)), VIEW_ARRAY[0].size.x / 2)
sz.y = font.line_height * (5 + (if message == "" then 0 else 3))


frame
────────────────────────────────────────────────────────────────────────
draw_previous_mode()

for view in VIEW_ARRAY:
    set_transform(view.corner, xy(1, 1), 2048.6, 1)
    set_clip(view.corner, view.size, -2047, 4096)
    $clipZ2 = 2049

    const windowSize = round(sz * clamp((mode_frames + 1) / OPEN_FRAMES, 0%, 100%))
    draw_rect(½ view.size, windowSize, windowBackgroundColor, windowBorderColor)

    // Window ambient occlusion
    draw_rect(½ view.size, windowSize + 2, ∅, #0007)
    draw_rect(½ view.size, windowSize + 4, ∅, #0003)
    if view.size.y >= 112: draw_rect(½ view.size, windowSize + 6, ∅, #0001)

    if mode_frames > max(15, OPEN_FRAMES):
        for control in gamepad_array:
            if control.qq or control.$pp or (control.aa and choice_index == 0):
                // Cancel
                play_sound($cancelUISound)
                pop_mode(∅)
            else if control.aa: // must be choice_index == 1
                // Accept option
                play_sound($acceptUISound)
                pop_mode(callback)
            else if control.xx:
                const prev = choice_index
                choice_index = clamp(choice_index + control.xx, 0, 1)
                play_sound(if prev == choice_index then $denyUISound else $moveUISound)

         
    if mode_frames > OPEN_FRAMES:
        draw_text({font: font, text: title + "?", pos: ½ view.size + xy(0, - ½ windowSize.y + 150% font.line_height), color: text_color, shadow:text_shadow_color, x_align: "center", y_align: "center"})

        if message != "":
            draw_text({font: font, text: message, pos: ½ view.size, color: text_color, x_align: "center", y_align: "center", wrap_width: 90% windowSize.x})

        for i < 2:
            const active      = choice_index == i
            const bright      = ½ (1 + cos(mode_frames / 9))
            const color       = if active then lerp(promptColor, #fff, 50% bright) else unselectedColor
            const outline     = if active then rgba(1,1,1, 25% bright) else ∅
            const offset      = xy(0, if active then -1 else 0)
            const shadow      = if active then text_shadow_color * 50% else text_shadow_color
            const pos         = ½ view.size + xy((2i - 1) * ⅕ windowSize.x, ½ windowSize.y - 150% font.line_height)
      
            draw_text({font: font, text: choice_array[i], pos: pos + xy(0, 1), color: shadow, x_align: "center", y_align: "center"})
            const bounds = draw_text({font: font, text: choice_array[i], pos: pos + offset, color: color, outline: outline, x_align: "center", y_align:"center"})
      
            // Make active on mouse hover
            if overlaps(touch.hover, bounds) and choice_index != i:
                choice_index = i
                play_sound($moveUISound)
                
            // Touch selection
            if touch.aa and overlaps(touch, bounds):
                if choice_index == 0:
                    // Cancel
                    play_sound($cancelUISound)
                    pop_mode(∅)
                else:
                    // Accept
                    play_sound($acceptUISound)
                    pop_mode(callback)
