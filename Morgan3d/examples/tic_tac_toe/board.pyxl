def reset_board(board):
    for x < 3:
        for y < 3:
            board[x][y] = ∅

    
def draw_board(board):
    for x < 3:
        for y < 3:
            const pos = board_to_screen(xy(x, y))
            draw_rect(pos, xy(BOX_SIDE, BOX_SIDE), BOX_COLOR, BOX_OUTLINE)
    
            const player = board[x][y]
            if player:
                draw_sprite({
                    sprite: player.sprite, 
                    pos: pos,
                    override_color: player.color
                })


def screen_to_board(pos):
    return round(pos / (BOX_SIDE + BOX_SPACING)) + 1


def board_to_screen(board_pos):
    return (board_pos - 1) * (BOX_SIDE + BOX_SPACING)

    
def in_bounds(board_pos):
    return (min(board_pos.x, board_pos.y) ≥ 0 and
            max(board_pos.x, board_pos.y) ≤ 2)


/* Returns true if someone has won */
def three_in_a_row(board):
    // Rows and columns
    for i < 3:
        if ((board[i][0] ≠ ∅ and board[i][0] == board[i][1] and board[i][0] == board[i][2]) or
            (board[0][i] ≠ ∅ and board[0][i] == board[1][i] and board[0][i] == board[2][i])):
                return true
    
    // Diagonals
    if (board[1][1] ≠ ∅ and 
        ((board[1][1] == board[0][0] and board[1][1] == board[2][2]) or
         (board[1][1] == board[2][0] and board[1][1] == board[0][2]))):
        return true